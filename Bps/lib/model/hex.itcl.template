package require Itcl

itcl::class %CLASS% {
  inherit model::Int

  constructor {args} {}
  destructor {}

  protected common min %MIN%
  protected common max %MAX%

  public variable value %DEFAULT%

  public method paramSpec {key {indent {}}}
  public method typedParamSpec {key {indent {}}}
}

itcl::body %CLASS%::constructor {args} {
  set _type hex
  foreach arg {itemname} {
    set cfgix [lsearch $args -$arg]
    if {$cfgix != -1 && ($cfgix % 2) == 0 && ([llength $args] % 2) == 0} {
      configure -$arg [lindex $args [expr $cfgix + 1]]
    }
  }
  configure -value "%DEFAULT%"
  eval configure $args
  if {![info exists value]} {
    error "value must be specified" {} RUNTIME_ERROR
  }
}

itcl::body %CLASS%::destructor {} {
}

itcl::configbody %CLASS%::value {
  if {[string is integer -strict 0x$value]} {
    set value 0x$value
  }
}

itcl::body %CLASS%::paramSpec {key {indent {}}} {
  dom createDocument param doc
  $doc documentElement root
  $root setAttribute id $key
  set val [$this cget -value]
  if {[string match 0x* $val]} {
    set val [string range $val 2 end]
  }
  $root appendFromScript {
    domNode::text $val
  }
  return [$doc asXML -indent [string length $indent]]
}

itcl::body %CLASS%::typedParamSpec {key {indent {}}} {
  dom createDocument $_type doc
  $doc documentElement root
  $root setAttribute id $key
  set val [$this cget -value]
  if {[string match 0x* $val]} {
    set val [string range $val 2 end]
  }
  $root appendFromScript {
    domNode::text $val
  }
  return [$doc asXML -indent [string length $indent]]
}

log::log warn "hex %CLASS% declared"
